<!-- robotNavigationLaunchTestHarness.launch -->
<!--
 Complete Launch file for Robot Navigation Unit Tests
 This launch file starts the complete robot navigation test harness including:
 1. Robot Navigation Driver (pose management and localization services)
 2. Robot Navigation (path planning and navigation services)
 3. Robot Navigation Tests (unit test execution)
 
 When tests complete, ALL nodes automatically terminate.
 
 Usage:
 roslaunch unit_tests robotNavigationLaunchTestHarness.launch
 
 Parameters:
 - robot_ip: IP address of the robot (default: 172.29.111.240)
 - launch_test: whether to launch the actual test (default: true)
 - initial_robot_x: initial robot x position (default: 2.0)
 - initial_robot_y: initial robot y position (default: 7.8)
 - initial_robot_theta: initial robot orientation in degrees (default: 270.0)
 - test_output_screen: show test output on screen (default: true)
 - navigation_output_screen: show navigation output on screen (default: true)
-->

<launch>
    <!-- Launch file parameters -->
    <arg name="robot_ip" default="172.29.111.240" />
    <arg name="launch_test" default="true" />
    <arg name="initial_robot_x" default="2.0" />
    <arg name="initial_robot_y" default="7.8" />
    <arg name="initial_robot_theta" default="270.0" />
    <arg name="test_output_screen" default="true" />
    <arg name="navigation_output_screen" default="false" />
    <arg name="driver_output_screen" default="false" />

    <!-- Set ROS parameters for the entire system -->
    <param name="robot_ip" value="$(arg robot_ip)" />
    <param name="initial_robot_x" value="$(arg initial_robot_x)" />
    <param name="initial_robot_y" value="$(arg initial_robot_y)" />
    <param name="initial_robot_theta" value="$(arg initial_robot_theta)" />

    <!-- 1. Launch Robot Navigation Driver (Localization and Pose Services) -->
    <node pkg="unit_tests" type="robotNavigationDriver" name="robotNavigationTestDriver"
          required="true" 
          output="$(eval 'screen' if arg('driver_output_screen') else 'log')"
          launch-prefix="bash -c 'sleep 2; $0 $@'">
        <param name="robot_ip" value="$(arg robot_ip)" />
        <rosparam>
            initial_robot_x: $(arg initial_robot_x)
            initial_robot_y: $(arg initial_robot_y)
            initial_robot_theta: $(arg initial_robot_theta)
        </rosparam>
    </node>

    <!-- 2. Launch Robot Navigation (Path Planning and Navigation Services) -->
    <node pkg="cssr_system" type="robotNavigation" name="robotNavigation"
          required="true" 
          output="$(eval 'screen' if arg('navigation_output_screen') else 'log')"
          launch-prefix="bash -c 'sleep 5; $0 $@'">
        <param name="robot_ip" value="$(arg robot_ip)" />
    </node>

    <!-- 3. Launch Robot Navigation Unit Tests -->
    <!-- This node controls shutdown: when tests finish, everything terminates -->
    <group if="$(arg launch_test)">
        <node pkg="unit_tests" type="robotNavigationTest" name="robotNavigationUnitTest"
              required="true" 
              output="$(eval 'screen' if arg('test_output_screen') else 'log')"
              launch-prefix="bash -c 'sleep 10; $0 $@'">
            <param name="robot_ip" value="$(arg robot_ip)" />
        </node>
    </group>

</launch>